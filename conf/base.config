/*
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    nf-core/curioseeker Nextflow base config file
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    A 'blank slate' config file, appropriate for general use on most high performance
    compute environments. Assumes that all software is installed and available on
    the PATH. Runs in `local` mode - all jobs will be run on the logged in environment.
----------------------------------------------------------------------------------------
*/

process {

    cpus   = { check_max( 24    * task.attempt, 'cpus'   ) }
    memory = { check_max( 96.GB * task.attempt, 'memory' ) }
    time   = { check_max( 24.h  * task.attempt, 'time'   ) }

    // memory errors which should be retried. otherwise error out
    errorStrategy = { (task.attempt <= process.maxRetries) ? 'retry' : 'ignore' }
    maxRetries    = 2
    maxErrors     = '-1'

    withLabel:error_ignore {
        errorStrategy = 'ignore'
    }

    withLabel:error_retry {
        errorStrategy = 'retry'
        maxRetries    = 2
    }

    withLabel:process_long {
        time   = { check_max( 24.h  * task.attempt, 'time'    ) }
    }

    // m5a.xlarge $0.172/hr
    withLabel:process_low {
        cpus   = { check_max( 4     * task.attempt, 'cpus'    ) }
        memory = { check_max( 16.GB * task.attempt, 'memory'  ) }
        time   = { check_max( 4.h   * task.attempt, 'time'    ) }
    }

    // m5a.2xlarge $0.344/hr
    withLabel:process_medium {
        cpus   = { check_max( 8     * task.attempt, 'cpus'    ) }
        memory = { check_max( 32.GB * task.attempt, 'memory'  ) }
        time   = { check_max( 12.h   * task.attempt, 'time'   ) }
    }

    // m5a.4xlarge $0.688/hr
    withLabel:process_high {
        cpus   = { check_max( 16    * task.attempt, 'cpus'    ) }
        memory = { check_max( 64.GB * task.attempt, 'memory'  ) }
        time   = { check_max( 16.h  * task.attempt, 'time'    ) }
    }

    // r6i.4xlarge $1.008/hr
    withLabel:process_med_high_memory {
        cpus   = { check_max( 16    * task.attempt, 'cpus'    ) }
        memory = { check_max( 128.GB * task.attempt, 'memory' ) }
        time   = { check_max( 16.h  * task.attempt, 'time'    ) }
    }

    //r6i.8xlarge $2.016/hr
    withLabel:process_high_memory {
        cpus   = { check_max( 32    * task.attempt, 'cpus'    ) }
        memory = { check_max( 256.GB * task.attempt, 'memory' ) }
        time   = { check_max( 20.h  * task.attempt, 'time'    ) }
    }
}
