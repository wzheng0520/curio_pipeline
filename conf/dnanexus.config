params {
    curio_seeker_docker        = 'docker.io/curiobioinformatics/curio-seeker-pipeline:v2.0.0'
    //curio_seeker_docker      = 'docker.io/curiobioinformatics/curio-seeker-pipeline:b7e46581b4e5d113218d3c1964aa68efb7433c12'
    igenomes_base              = 'dx://project-GPvXQjQ0jkzBKvV6Bg78xjjq:/reference'
    dnanexus                   = true

    // Max resource options
    max_memory                 = '768.GB'
    max_cpus                   = 64
    max_time                   = '240.h'
}


process {

    // defaults for unannotated processes
    cpus   = { check_max( 24    * task.attempt, 'cpus'   ) }
    memory = { check_max( 96.GB * task.attempt, 'memory' ) }
    time   = { check_max( 24.h  * task.attempt, 'time'   ) }

    errorStrategy = 'retry'
    maxRetries    = 2
    maxErrors     = '-1'

    // Process-specific resource requirements
    // NOTE - Please try and re-use the labels below as much as possible.
    //        These labels are used and recognised by default in DSL2 files hosted on nf-core/modules.
    //        If possible, it would be nice to keep the same label naming convention when
    //        adding in your local modules too.
    // See https://www.nextflow.io/docs/latest/config.html#config-process-selectors
    withLabel:process_low {
        cpus   = 1
        memory = { check_max( 8.GB  * task.attempt, 'memory'  ) }
    }
    withLabel:process_medium {
        cpus   = 8
        memory = { check_max( 36.GB * task.attempt, 'memory'  ) }
    }
    withLabel:process_high {
        cpus   = 16
        memory = { check_max( 64.GB * task.attempt, 'memory'  ) }
    }
    withLabel:process_long {
        cpus = ''
        memory = ''
    }
    withLabel:process_med_high_memory {
        cpus   = 32
        memory = { check_max( 128.GB * task.attempt, 'memory'  ) }
    }
    withLabel:process_high_memory {
        cpus = 32
        memory = { check_max( task.attempt <= 1 ? 256.GB : (task.attempt <= 2 ? 380.GB : 512.GB), 'memory' ) }
    }
    withLabel:error_ignore {
        errorStrategy = 'ignore'
    }
    withLabel:error_retry {
        errorStrategy = 'retry'
        maxRetries    = 2
    }
}
